{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction What it is? Domino Low code assistant is a tool for the Jupyter notebook to insert code snippets into notebook cells. Some actions, such as opening a file, or connecting to a database are more easily done using a graphical UI than in code. Loading a CSV file Loading data from Snowflake Soon Get started Installation Jupyter lab not yet supported Currently, the code assistant only works in the (classical) Jupyter notebook. Jupyter lab is not yet supported.","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#what-it-is","text":"Domino Low code assistant is a tool for the Jupyter notebook to insert code snippets into notebook cells. Some actions, such as opening a file, or connecting to a database are more easily done using a graphical UI than in code. Loading a CSV file Loading data from Snowflake Soon Get started Installation Jupyter lab not yet supported Currently, the code assistant only works in the (classical) Jupyter notebook. Jupyter lab is not yet supported.","title":"What it is?"},{"location":"install/","text":"Installation Dominocode is not available from pypi, please contact us for a private link so you can install it. Jupyter lab not yet supported Currently, the code assistant only works in the (classical) Jupyter notebook. Jupyter lab is not yet supported. Manual installation Once you have the private link, you can install it manually in an existing Python environment using. $ pip install https://private-url/dominocode.tar.gz ---> 100% From a notebook You can also run this from your notebook, by running !pip install ... from a code cell. Not persistent If you install this into a running workspace, you might lose the installed package when the workspace restarts. It is best practice to install it as explained in the next section. Install for workspace When a workspace is created, a requirements.txt file will be used to install Python packages into your new environment. We can use this to make sure dominocode is installed before we start our notebook. Navigate to Files In your project, navigate to Files . Create a new file Create a new file by clicking the left most icon to get to the following screen Give filename and enter url Enter the requirements.txt filename in the top textfield and the private url in the bottom textarea. Save file Clicking the Save button should give you the following screen, on success. Optional: check file Navigate to Files again, to make sure you have added the file","title":"Installation"},{"location":"install/#installation","text":"Dominocode is not available from pypi, please contact us for a private link so you can install it. Jupyter lab not yet supported Currently, the code assistant only works in the (classical) Jupyter notebook. Jupyter lab is not yet supported.","title":"Installation"},{"location":"install/#manual-installation","text":"Once you have the private link, you can install it manually in an existing Python environment using. $ pip install https://private-url/dominocode.tar.gz ---> 100% From a notebook You can also run this from your notebook, by running !pip install ... from a code cell. Not persistent If you install this into a running workspace, you might lose the installed package when the workspace restarts. It is best practice to install it as explained in the next section.","title":"Manual installation"},{"location":"install/#install-for-workspace","text":"When a workspace is created, a requirements.txt file will be used to install Python packages into your new environment. We can use this to make sure dominocode is installed before we start our notebook.","title":"Install for workspace"},{"location":"install/#navigate-to-files","text":"In your project, navigate to Files .","title":"Navigate to Files"},{"location":"install/#create-a-new-file","text":"Create a new file by clicking the left most icon to get to the following screen","title":"Create a new file"},{"location":"install/#give-filename-and-enter-url","text":"Enter the requirements.txt filename in the top textfield and the private url in the bottom textarea.","title":"Give filename and enter url"},{"location":"install/#save-file","text":"Clicking the Save button should give you the following screen, on success.","title":"Save file"},{"location":"install/#optional-check-file","text":"Navigate to Files again, to make sure you have added the file","title":"Optional: check file"},{"location":"getting-started/loading-data/","text":"Loading data Check installation If you have followed the installation instructions , you should see a blue Assistant button in the toolbar of your Jupyter notebook. Initialize assistant The assistant can be started by clicking the Assistant button in the toolbar. It will insert a code snippet in a new code cell and execute it. After running succesfully, you should see Assistant initialized , as in the following screenshot: If you now hover above a code cell, you should see a blue icon to the right: If you hover above the icon, it will show a popup menu: Loading CSV data into a Pandas DataFrame Open dialog Hover above the icon and click the menu item, which will open the Load Data dialog. Select Datasets tab To select a file, navigate to the Datasets tab: Navigate to the right directory Use .. to move a directory up: And click the bold directory name to enter a directory Click to open Click on the titanic.csv file, and it will close the dialog, and insert the Python code to load the .csv file into a Pandas dataframe. The dataframe will be assigned to the df variable. The last expression (the last line) of the code cell will only be the df variable, which will cause the notebook to display its content. You can now do your custom data transformations, by following the Pandas documentatio","title":"Loading data"},{"location":"getting-started/loading-data/#loading-data","text":"","title":"Loading data"},{"location":"getting-started/loading-data/#check-installation","text":"If you have followed the installation instructions , you should see a blue Assistant button in the toolbar of your Jupyter notebook.","title":"Check installation"},{"location":"getting-started/loading-data/#initialize-assistant","text":"The assistant can be started by clicking the Assistant button in the toolbar. It will insert a code snippet in a new code cell and execute it. After running succesfully, you should see Assistant initialized , as in the following screenshot: If you now hover above a code cell, you should see a blue icon to the right: If you hover above the icon, it will show a popup menu:","title":"Initialize assistant"},{"location":"getting-started/loading-data/#loading-csv-data-into-a-pandas-dataframe","text":"","title":"Loading CSV data into a Pandas DataFrame"},{"location":"getting-started/loading-data/#open-dialog","text":"Hover above the icon and click the menu item, which will open the Load Data dialog.","title":"Open dialog"},{"location":"getting-started/loading-data/#select-datasets-tab","text":"To select a file, navigate to the Datasets tab:","title":"Select Datasets tab"},{"location":"getting-started/loading-data/#navigate-to-the-right-directory","text":"Use .. to move a directory up: And click the bold directory name to enter a directory","title":"Navigate to the right directory"},{"location":"getting-started/loading-data/#click-to-open","text":"Click on the titanic.csv file, and it will close the dialog, and insert the Python code to load the .csv file into a Pandas dataframe. The dataframe will be assigned to the df variable. The last expression (the last line) of the code cell will only be the df variable, which will cause the notebook to display its content. You can now do your custom data transformations, by following the Pandas documentatio","title":"Click to open"},{"location":"getting-started/transform/","text":"Transforming data Initialize assistant We start similarly as in Loading data by initializing the assistant. Loading data In this case, instead of using the assistant, we load the data ourselves: Open dialog Hover above the icon and click the menu item, which will open the Transformations dialog. Choose dataframe When the Tranformations dialog opens, we have to choose a dataframe. Click the select box to get an overview of all dataframe variables and click on the one you want to apply transformations on. After which the data is shown in a table. Apply quick transformation We could manually add a transformation by clicking on the , but in this example we will add a tranformation by a quick action throught the table. Hover above a cell value containing nan , and you can then hover above the triple dots icon, to get the menu Click the menu item to open the dialog: And click the button to filter the dataframe. Now we can see that we only have values with nan for the cabin column. Show code Toggle the switch to show the code Insert code And click the button to insert the code into the notebook.","title":"Transforming data"},{"location":"getting-started/transform/#transforming-data","text":"","title":"Transforming data"},{"location":"getting-started/transform/#initialize-assistant","text":"We start similarly as in Loading data by initializing the assistant.","title":"Initialize assistant"},{"location":"getting-started/transform/#loading-data","text":"In this case, instead of using the assistant, we load the data ourselves:","title":"Loading data"},{"location":"getting-started/transform/#open-dialog","text":"Hover above the icon and click the menu item, which will open the Transformations dialog.","title":"Open dialog"},{"location":"getting-started/transform/#choose-dataframe","text":"When the Tranformations dialog opens, we have to choose a dataframe. Click the select box to get an overview of all dataframe variables and click on the one you want to apply transformations on. After which the data is shown in a table.","title":"Choose dataframe"},{"location":"getting-started/transform/#apply-quick-transformation","text":"We could manually add a transformation by clicking on the , but in this example we will add a tranformation by a quick action throught the table. Hover above a cell value containing nan , and you can then hover above the triple dots icon, to get the menu Click the menu item to open the dialog: And click the button to filter the dataframe. Now we can see that we only have values with nan for the cabin column.","title":"Apply quick transformation"},{"location":"getting-started/transform/#show-code","text":"Toggle the switch to show the code","title":"Show code"},{"location":"getting-started/transform/#insert-code","text":"And click the button to insert the code into the notebook.","title":"Insert code"}]}